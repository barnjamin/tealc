#pragma version 5
txn ApplicationID
int 0
==
bnz main_l24
txn OnCompletion
int DeleteApplication
==
bnz main_l23
txn OnCompletion
int UpdateApplication
==
bnz main_l22
txn OnCompletion
int CloseOut
==
bnz main_l21
txn OnCompletion
int OptIn
==
bnz main_l20
txn OnCompletion
int NoOp
==
bnz main_l7
err

main_l7:
txna ApplicationArgs 0
byte "mint"
==
bnz main_l19
txna ApplicationArgs 0
byte "burn"
==
bnz main_l18
txna ApplicationArgs 0
byte "swap"
==
bnz main_l17
txna ApplicationArgs 0
byte "boot"
==
bnz main_l16
txna ApplicationArgs 0
byte "fund"
==
bnz main_l15
txna ApplicationArgs 0
byte "update"
==
bnz main_l14
err

main_l14:
txna Accounts 1
callsub set_governor
b main_l25

main_l15:
callsub fund
b main_l25

main_l16:
callsub bootstrap
b main_l25

main_l17:
callsub swap
b main_l25

main_l18:
callsub burn
b main_l25

main_l19:
callsub mint
b main_l25

main_l20:
int 0
b main_l25

main_l21:
int 1
b main_l25

main_l22:
callsub is_governor
b main_l25

main_l23:
callsub is_governor
b main_l25

main_l24:
int 1

main_l25:
return

mint_tokens: // mint_tokens
store 10
store 9
store 8
store 7
store 6
load 9
load 7
/
load 10
load 8
/
<
bnz mint_tokens_l2
load 10
load 8
/
b mint_tokens_l3

mint_tokens_l2:
load 9
load 7
/

mint_tokens_l3:
load 6
*
retsub

burn_tokens: // burn_tokens
store 22
store 21
store 20
load 21
load 22
load 20
/
*
retsub

swap_tokens: // swap_tokens
store 29
store 28
store 27
load 27
int 1000
int 5
-
*
load 29
*
load 28
int 1000
*
load 27
int 1000
int 5
-
*
+
/
retsub

mint: // mint
global CurrentApplicationAddress
byte "p"
app_global_get
asset_holding_get AssetBalance
store 0
store 1
global CurrentApplicationAddress
int 10
asset_holding_get AssetBalance
store 2
store 3
global CurrentApplicationAddress
int 100
asset_holding_get AssetBalance
store 4
store 5
global GroupSize
int 3
==
txna Assets 0
int 10
==
txna Assets 1
int 100
==
&&
&&
gtxn 0 TypeEnum
int appl
==
&&
gtxna 0 Assets 0
gtxn 1 XferAsset
==
&&
gtxna 0 Assets 1
gtxn 2 XferAsset
==
&&
gtxn 1 TypeEnum
int axfer
==
&&
gtxn 1 AssetReceiver
global CurrentApplicationAddress
==
&&
gtxn 1 XferAsset
int 10
==
&&
gtxn 1 AssetAmount
int 0
>
&&
gtxn 1 Sender
gtxn 0 Sender
==
&&
gtxn 2 TypeEnum
int axfer
==
&&
gtxn 2 AssetReceiver
global CurrentApplicationAddress
==
&&
gtxn 2 XferAsset
int 100
==
&&
gtxn 2 AssetAmount
int 0
>
&&
gtxn 2 Sender
gtxn 0 Sender
==
&&
assert
load 0
load 2
&&
load 4
&&
assert
gtxn 0 Sender
byte "p"
app_global_get
int 10000000000
load 1
-
load 3
load 5
gtxn 1 AssetAmount
gtxn 2 AssetAmount
callsub mint_tokens
callsub axfer
int 1
retsub

burn: // burn
global CurrentApplicationAddress
byte "p"
app_global_get
asset_holding_get AssetBalance
store 14
store 15
global CurrentApplicationAddress
int 10
asset_holding_get AssetBalance
store 16
store 17
global CurrentApplicationAddress
int 100
asset_holding_get AssetBalance
store 18
store 19
global GroupSize
int 2
==
txna Assets 0
int 10
==
txna Assets 1
int 100
==
&&
&&
gtxn 0 TypeEnum
int appl
==
&&
gtxn 1 TypeEnum
int axfer
==
&&
gtxn 1 AssetReceiver
global CurrentApplicationAddress
==
&&
gtxn 1 XferAsset
byte "p"
app_global_get
==
&&
assert
load 14
load 16
&&
load 18
&&
assert
gtxn 1 Sender
int 10
int 10000000000
load 15
-
load 17
gtxn 1 AssetAmount
callsub burn_tokens
callsub axfer
gtxn 1 Sender
int 100
int 10000000000
load 15
-
load 19
gtxn 1 AssetAmount
callsub burn_tokens
callsub axfer
int 1
retsub

swap: // swap
global CurrentApplicationAddress
gtxn 1 XferAsset
asset_holding_get AssetBalance
store 23
store 24
global CurrentApplicationAddress
gtxn 1 XferAsset
int 10
==
bnz swap_l5
int 10

swap_l2:
asset_holding_get AssetBalance
store 25
store 26
global GroupSize
int 2
==
txna Assets 0
int 10
==
txna Assets 1
int 100
==
&&
&&
gtxn 0 TypeEnum
int appl
==
&&
gtxn 1 TypeEnum
int axfer
==
&&
gtxn 1 XferAsset
int 10
==
gtxn 1 XferAsset
int 100
==
||
&&
gtxn 1 AssetAmount
int 0
>
&&
assert
load 23
load 25
&&
assert
gtxn 1 Sender
gtxn 1 XferAsset
int 10
==
bnz swap_l4
int 10
b swap_l6

swap_l4:
int 100
b swap_l6

swap_l5:
int 100
b swap_l2

swap_l6:
gtxn 1 AssetAmount
load 24
load 26
callsub swap_tokens
callsub axfer
int 1
retsub

is_governor: // is_governor
int 0
byte "gov"
app_global_get_ex
store 30
store 31
txn Sender
load 30
bnz is_governor_l2
global CreatorAddress
b is_governor_l3

is_governor_l2:
load 31

is_governor_l3:
==
retsub

set_governor: // set_governor
store 32
callsub is_governor
bnz set_governor_l2
int 0
b set_governor_l3

set_governor_l2:
byte "gov"
load 32
app_global_put
int 1

set_governor_l3:
retsub

bootstrap: // bootstrap
global GroupSize
int 1
==
gtxn 0 TypeEnum
int appl
==
&&
txna Assets 0
int 10
==
txna Assets 1
int 100
==
&&
&&
assert
callsub is_governor
assert
int 10
int 100
callsub create_pool_token
int 10
callsub opt_in
int 100
callsub opt_in
int 1
retsub

fund: // fund
global GroupSize
int 3
==
gtxn 0 TypeEnum
int appl
==
&&
txna Assets 0
int 10
==
txna Assets 1
int 100
==
&&
&&
gtxn 1 TypeEnum
int axfer
==
&&
gtxn 1 XferAsset
int 10
==
&&
gtxn 1 AssetAmount
int 0
>
&&
gtxn 1 Sender
gtxn 0 Sender
==
&&
gtxn 2 TypeEnum
int axfer
==
&&
gtxn 2 XferAsset
int 100
==
&&
gtxn 2 AssetAmount
int 0
>
&&
gtxn 2 Sender
gtxn 0 Sender
==
&&
assert
gtxn 0 Sender
byte "p"
app_global_get
gtxn 1 AssetAmount
gtxn 2 AssetAmount
*
sqrt
int 1000
-
callsub axfer
int 1
retsub

axfer: // axfer
store 13
store 12
store 11
itxn_begin
int axfer
itxn_field TypeEnum
load 12
itxn_field XferAsset
load 13
itxn_field AssetAmount
load 11
itxn_field AssetReceiver
itxn_submit
retsub

opt_in: // opt_in
store 33
global CurrentApplicationAddress
load 33
int 0
callsub axfer
retsub

create_pool_token: // create_pool_token
store 35
store 34
load 34
asset_params_get AssetUnitName
store 36
store 37
load 35
asset_params_get AssetUnitName
store 38
store 39
itxn_begin
int acfg
itxn_field TypeEnum
byte "DPT-"
load 37
concat
byte "-"
concat
load 39
concat
itxn_field ConfigAssetName
byte "dpt"
itxn_field ConfigAssetUnitName
int 10000000000
itxn_field ConfigAssetTotal
int 3
itxn_field ConfigAssetDecimals
global CurrentApplicationAddress
itxn_field ConfigAssetManager
global CurrentApplicationAddress
itxn_field ConfigAssetReserve
itxn_submit
byte "p"
itxn CreatedAssetID
app_global_put
retsub